# Uses INI style format, look ConfigParser python module documentation for syntax
# Lines beginning with "#" or ";" are comments
 
 
[ScriptLauncher]
# The following section and entry let you add custom paths where your commands resides.
# These paths are appended to default environment path used in shell subprocess.
# Use ":" as path separator (as in linux PATH environment variable, for Windows i dont know,
# not tested, if you try let me know ;) ).
#
paths=~/bin:~/idning-source/c/dia-0.97/plug-ins/python

# The editor option let you set your favourite visual editor to use for editing this file,
# calling it from Script Launcher dialog.
# Check that editor is in your path or use full path to program.
# This command will be launched as in a shell, appending this file full path string.
# Windows users can set this option to "notepad".
#
# examples
# uncomment next line for linux desktops
#editor = gvim
# 
# uncomment next line for windows users
#editor=notepad

# Port number for proxy
# When proxy activated, point a web browser to http://localhost:<proxy_port> and there is a
# list of opened files: full local file path, last modified time, link for download xml, 
# link to png image of visible area and layers in diagram
#
# uncomment next line for default 49999 port number
#proxy_port = 49999



[Scripts]
# The "Scripts" sections let you define the commands that show in Script Launcher.
# Option names can contain spaces, they will be shown in script launcher selector. 
# Option values are the commands that will be executed in shell (as you type in shell).
# In commands you can use some "template string" that script launcher will replace
# with values from Dia diagram.
# 
# Allowed template strings
#   %diagramPath%      : full path of diagram
#   %diagramDir%       : directory path of diagram
#   %diagramParentDir% : parent directory path of diagram
#   %layerName%        : selected layer name
#   %layerNum%         : selected layer number
#   %selectedId%       : space separated list of selected object id (as in xml dia file, es. O4 O1 O0 ...)
#
# example commands
# These example are taken from my linux environment
#
# export current diagram as png image in same diagram dir
#export png = dia -t png -e %diagramPath%.png %diagramPath%
#
# keep track of TODO and FIXME in sources, show bazaar status and last 10 logs 
#Project status = grep -r TODO %diagramParentDir%;grep -r FIXME %diagramParentDir%;echo;bzr st;echo;bzr log -v -l 10 
#
# work in progress
#Bzr st+diff = bzr st; echo ; bzr diff
#
# show every template string current value
Show all templates= echo %diagramPath% %diagramDir% %diagramParentDir% %layerName% %layerNum% %selectedId%

